// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ticket_Hive.Data;

#nullable disable

namespace Ticket_Hive.Data.Migrations
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20230404164614_4")]
    partial class _4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ticket_Hive.Data.Models.AppUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventModelId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventModelId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.BookingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("NbrOfTickets")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartModelId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("ShoppingCartModelId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.EventModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TicketsSold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            DateTime = new DateTime(2023, 4, 14, 18, 46, 14, 566, DateTimeKind.Local).AddTicks(4656),
                            EventType = "Nightclub",
                            Location = "Lund",
                            Name = "Kareoke bowling",
                            Price = 100m,
                            TicketsSold = 0
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 300,
                            DateTime = new DateTime(2023, 4, 9, 18, 46, 14, 566, DateTimeKind.Local).AddTicks(4711),
                            EventType = "Musical",
                            Location = "Malmö",
                            Name = "Mama Mia",
                            Price = 200m,
                            TicketsSold = 0
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 30000,
                            DateTime = new DateTime(2023, 4, 24, 18, 46, 14, 566, DateTimeKind.Local).AddTicks(4714),
                            EventType = "Sport",
                            Location = "Stockholm",
                            Name = "AIK - Hammarby",
                            Price = 500m,
                            TicketsSold = 0
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 20,
                            DateTime = new DateTime(2023, 4, 6, 18, 46, 14, 566, DateTimeKind.Local).AddTicks(4717),
                            EventType = "Övrigt",
                            Location = "Halmstad",
                            Name = "Gästföreläsning med Steve Jobs",
                            Price = 10m,
                            TicketsSold = 20
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 10,
                            DateTime = new DateTime(2023, 4, 29, 18, 46, 14, 566, DateTimeKind.Local).AddTicks(4720),
                            EventType = "Sport",
                            Location = "Köpenhamn",
                            Name = "VM i Rally-Pingis",
                            Price = 25m,
                            TicketsSold = 0
                        });
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.ShoppingCartModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.AppUserModel", b =>
                {
                    b.HasOne("Ticket_Hive.Data.Models.EventModel", null)
                        .WithMany("Users")
                        .HasForeignKey("EventModelId");
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.BookingModel", b =>
                {
                    b.HasOne("Ticket_Hive.Data.Models.EventModel", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket_Hive.Data.Models.ShoppingCartModel", null)
                        .WithMany("Bookings")
                        .HasForeignKey("ShoppingCartModelId");

                    b.HasOne("Ticket_Hive.Data.Models.AppUserModel", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.ShoppingCartModel", b =>
                {
                    b.HasOne("Ticket_Hive.Data.Models.AppUserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.AppUserModel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.EventModel", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ticket_Hive.Data.Models.ShoppingCartModel", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
